{"version":3,"sources":["firebase.js","Chat.js","SidebarChat.js","Sidebar.js","types.js","Login.js","App.js","reportWebVitals.js","reducer.js","store.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Chat","messages","useState","firebasemessages","setfirebasemessages","user","useSelector","state","roomId","useParams","input","setinput","roomname","setroomname","seed","setseed","useEffect","Math","floor","random","sendmessage","e","a","preventDefault","collection","doc","add","message","name","displayName","timestamp","FieldValue","serverTimestamp","onSnapshot","Snapshot","data","orderBy","snapshot","docs","map","className","Avatar","src","Date","length","toDate","toUTCString","IconButton","SearchOutlined","AttachFile","MoreVert","onChange","target","value","placeholder","onClick","type","SidebarChat","props","messagesfromfirebase","setmessagesfromfirebase","id","console","log","to","Sidebar","rooms","setrooms","unsubscribe","alt","photoURL","style","backgroundColor","prompt","p","split","reverse","join","password","room","SET_USER","Login","dispatch","useDispatch","Button","signInWithPopup","then","result","types","payload","catch","err","alert","App","setmessages","axios","get","getreq","channel","Pusher","cluster","subscribe","bind","unbind_all","display","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3b7a3e6.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD2jjB0L91-tatoH7Zz9FMipvBJ5eJuNsI\",\r\n    authDomain: \"whatsapp-ae920.firebaseapp.com\",\r\n    projectId: \"whatsapp-ae920\",\r\n    storageBucket: \"whatsapp-ae920.appspot.com\",\r\n    messagingSenderId: \"1026202602199\",\r\n    appId: \"1:1026202602199:web:b46b643a29e2a59de5be92\",\r\n    measurementId: \"G-CP4LPM5M53\"\r\n  };\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig)\r\n  const db=firebaseApp.firestore()\r\n  const auth=firebase.auth()\r\n  const provider =new firebase.auth.GoogleAuthProvider()\r\nexport {auth,provider};\r\nexport default db;","import { Avatar, IconButton } from '@material-ui/core'\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport React,{useState,useEffect} from 'react'\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport \"./Chat.css\"\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport db from './firebase'\r\nimport firebase from 'firebase'\r\nimport {useParams} from 'react-router-dom'\r\nfunction Chat({messages}) {\r\n    const [firebasemessages, setfirebasemessages] = useState([])\r\n    const user = useSelector(state => state.user)\r\n    const {roomId}=useParams();\r\n    const [input, setinput] = useState('')\r\n    const [roomname, setroomname] = useState('')\r\n    const [seed, setseed] = useState('')\r\n    useEffect(() => {\r\n       setseed(Math.floor(Math.random()*5000))\r\n    }, [])\r\n    const sendmessage= async(e)=>{\r\ne.preventDefault();\r\n//  await axios.post('http://localhost:4000/messages/new',{\r\n//      message:input,\r\n//      username:{user},\r\n//      timestamp:\"Just NOW\",\r\n//      received:true\r\n//  })\r\ndb.collection('ROOMS').doc(roomId).collection('messages').add({\r\n    message:input,\r\n    name:user.displayName,\r\n    timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n})\r\n\r\n setinput('');\r\n    }\r\n   useEffect(() => {\r\n     if(roomId) {\r\n         db.collection('ROOMS').doc(roomId).onSnapshot(\r\n             Snapshot=>{\r\n                 setroomname(Snapshot.data().name)\r\n             }\r\n         )\r\n         db.collection('ROOMS').doc(roomId).collection(\"messages\").orderBy('timestamp','asc').onSnapshot(snapshot=>{\r\n             setfirebasemessages(snapshot.docs.map(doc=>doc.data()))\r\n         })\r\n     }\r\n       \r\n   }, [roomId]) \r\n // //{message.username} in line70\r\n    return (\r\n        <div className=\"chatt\">\r\n            <div className=\"chatt_header\" >\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n       \r\n            <div className=\"chatt_headerinfo\">\r\n            <h3>{roomname}</h3>\r\n            <p>last Seen{\" \"}\r\n            {new Date(firebasemessages[firebasemessages.length-1]?.timestamp?.toDate()).toUTCString()}\r\n            </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"chatt_headerright\">\r\n            <IconButton>\r\n            <SearchOutlined/>\r\n            </IconButton>\r\n            <IconButton>\r\n            <AttachFile/>\r\n            </IconButton>\r\n            <IconButton><MoreVert/>\r\n            </IconButton>\r\n            </div>\r\n            </div>\r\n            <div className=\"chat_body\">\r\n            {firebasemessages?.map(message=>(\r\n                <p className={`chat_message ${message.name===user.displayName \r\n                   && \r\n                    'chat_receiver'}`}>\r\n               <span className=\"chat_name\">\r\n              \r\n               {message.name}\r\n               </span>\r\n                {message.message}\r\n                <span className=\"chat_timestamp\">\r\n                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    \r\n                \r\n                </span>\r\n                </p>\r\n\r\n            ))\r\n\r\n            }\r\n           \r\n        \r\n            </div>\r\n            <div className=\"chat_footer\" >\r\n            <InsertEmoticonIcon/>\r\n            <form>\r\n            <input onChange={e=>setinput(e.target.value)} value={input} placeholder=\"Type a message\" />\r\n            <button onClick={sendmessage} type=\"submit\">send a message</button>\r\n            </form>\r\n            <MicIcon/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import { Avatar } from '@material-ui/core'\r\nimport React ,{useEffect,useState}from 'react'\r\nimport './sidebatchat.css'\r\n// eslint-disable-next-line no-unused-vars\r\nimport db from './firebase'\r\nimport {Link} from 'react-router-dom'\r\nfunction SidebarChat(props) {\r\n    const [seed, setseed] = useState('')\r\n    const [messagesfromfirebase, setmessagesfromfirebase] = useState('')\r\n    useEffect(() => {\r\n       setseed(Math.floor(Math.random()*5000))\r\n    }, [])\r\nuseEffect(() => {\r\n    if(props.id){\r\n        db.collection('ROOMS').doc(props.id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot=>{\r\n           setmessagesfromfirebase(snapshot.docs.map(doc=>doc.data)) \r\n        })\r\n        console.log(messagesfromfirebase)\r\n    }\r\n   \r\n},)\r\n    return (  <Link to={`/rooms/${props.id}`}>\r\n        <div className=\"sidebarchat\">\r\n      \r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n        <div className=\"sidebarinfo\">\r\n        <h2>{props.name}</h2>\r\n        <p>{messagesfromfirebase[0]?.message}</p>\r\n        </div>\r\n            \r\n        </div></Link>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React ,{useState,useEffect}from 'react'\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SidebarChat from './SidebarChat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport {useSelector }from 'react-redux'\r\nimport './Sidebar.css'\r\nimport db from './firebase'\r\nfunction Sidebar() {\r\nconst [rooms, setrooms] = useState([])\r\nuseEffect(() => {const unsubscribe=\r\n   db.collection('ROOMS').onSnapshot(snapshot=>{\r\n      \r\nsetrooms(snapshot.docs.map(doc =>(\r\n    {\r\n        id:doc.id,\r\n        data:doc.data(),\r\n\r\n    }\r\n)))\r\n\r\n   })\r\n   return()=>{\r\n       unsubscribe();\r\n   }\r\n}, [])\r\nconst createchat=()=>{\r\n    const roomname=prompt(\"please enter name for chat room\")\r\n    if(roomname){\r\n        var p=(roomname.split(\"\").reverse()).join(\"\")\r\n        db.collection('ROOMS').add({\r\n            name:roomname,\r\n            password:p\r\n        })\r\n    }\r\n}\r\nconst user = useSelector(state => state.user)\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n            <IconButton>\r\n            <Avatar  alt=\"Remy Sharp\" src={user?.photoURL} />\r\n            </IconButton>\r\n            \r\n            <div className=\"headerright\">\r\n            <IconButton>\r\n            <DonutLargeIcon/>\r\n            </IconButton>\r\n            <IconButton>\r\n           <ChatIcon/>\r\n            </IconButton>\r\n            <IconButton>\r\n            <MoreVertIcon/>\r\n            </IconButton>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"search\">\r\n            <div style={{ backgroundColor:\" white\"}} className=\"searchconstainer\">\r\n            <SearchOutlined/>\r\n            <input type=\"text\" placeholder=\"search or start new chat\"/>\r\n            </div>\r\n            </div>\r\n            <div className=\"chat\">\r\n            <div className=\"addnew\" onClick={createchat}><h2>Add New Chat</h2></div>\r\n            {rooms.map(room=>(\r\n                <SidebarChat key ={room.id} id={room.id}\r\n                name={room.data.name}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const SET_USER = 'SET_USER'\r\nexport const constantName = 'constantName'","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Login.css'\r\nimport * as types from './types'\r\nimport {auth,provider} from './firebase'\r\nimport {useDispatch} from 'react-redux'\r\nfunction Login() {\r\nconst signIn=()=>{\r\nauth.signInWithPopup(provider).then(result=>{\r\nconsole.log(result)\r\ndispatch({type:types.SET_USER,payload:result.user})\r\n}).catch(err=>alert(err.message))\r\n}\r\n\r\nconst dispatch = useDispatch()\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\"\r\n             alt=''/>\r\n            <div className=\"login_first\">\r\n            <h1>sign in to Whatsapp</h1>\r\n            </div>\r\n            <Button onClick={signIn}>\r\n            Sign In with Google\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React,{useEffect,useState} from 'react'\nimport Chat from './Chat'\nimport Sidebar from './Sidebar'\nimport Pusher from 'pusher-js'\n//import axios from './axios'\nimport Login from './Login'\nimport{ useSelector} from 'react-redux'\nimport axios from 'axios'\nimport{Switch,Route,BrowserRouter} from 'react-router-dom'\nfunction App() {\n\n  const user = useSelector(state => state.user)\n  // eslint-disable-next-line no-unused-vars\n  const [messages, setmessages] = useState([])\n  useEffect(() => {\n    async function getreq(){\n   const message=await axios.get('http://localhost:4000/messages/sync')\n   setmessages(message.data)\n    }\ngetreq()\n\n\n    },[]);\n  \n\n  useEffect(() => {\n\n    const pusher = new Pusher('1017288953a9052f5f73', {\n      cluster: 'ap2'\n    });\n    \n    var channel = pusher.subscribe('messages');\n    channel.bind('inserted', (data)=> {\n     \n      setmessages([...messages,data])});\n    \n     return ()=>{\n        channel.unbind_all()\n        channel.unsubscribe()\n      }\n  }, [messages])\n  console.log(messages)\n  // eslint-disable-next-line no-unused-vars\n \n\n\n  return (\n    <div className='app'>\n\n    {!user ?<Login/>: ( <div className=\"app_body\" style={{display:'flex'}}>\n    \n    <BrowserRouter>\n    <Sidebar/>\n    <Switch>\n    \n    <Route path=\"/rooms/:roomId\"> \n     <Chat messages={messages}/>\n    </Route>\n    <Route path=\"/\" >\n    <h1> Welcome</h1>\n    </Route>\n    </Switch>\n    \n    </BrowserRouter>\n   \n    </div>)}\n   \n   \n      \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from './types'\r\nconst initialState = {\r\nuser:null,\r\n}\r\n\r\nconst reducer=(state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n    case types.SET_USER:\r\n        return { ...state, user:payload }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\nexport default reducer;","//import { Store } from '@material-ui/icons';\r\n// import React,{createContext,useReducer,useContext} from 'react';\r\n// export const StateContext=createContext();\r\n// export const StateProvider=({reducer,initialState,children})=>(\r\n// <StateContext.Provider value={useReducer(reducer,initialState)}\r\n// >\r\n// {children}\r\n// </StateContext.Provider>\r\n// )\r\n// export const useStateValue=()=> useContext(StateContext)\r\n\r\nimport {createStore} from 'redux'\r\nimport reducer from './reducer'\r\nconst store=createStore(reducer)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport{Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n  <App />\n  </Provider>\n </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}